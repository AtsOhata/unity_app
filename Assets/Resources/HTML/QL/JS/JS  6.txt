<?xml version="1.0" encoding="utf-8"?>
<QuestionSet xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <RandomFlag>true</RandomFlag>
  <UpperLimitFlag>1</UpperLimitFlag>
    <QuestionPacks>
    <QuestionPack>
      <Alias>JS_Basic_0101</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            n = 123.45;(改行)n.toPrecision(6);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>123.450</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>1.235e+6</string>
            <string>12.346</string>
            <string>123.456</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0102</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let n = [&quot;a&quot;,1,&quot;b&quot;,2];(改行)console.log(n[0] + n[3]);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>a2</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>b</string>
            <string>error</string>
            <string>NaN</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0103</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2];(改行)let a2 = [2,3];(改行)a1.○○(a2);(改行)(改行)↓(改行)(改行)[1,2,2,3]
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>concat</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>join</string>
            <string>slice</string>
            <string>splice</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0104</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2];(改行)a1.○○(&quot;/&quot;);(改行)(改行)↓(改行)(改行)1/2
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>join</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>concat</string>
            <string>slice</string>
            <string>splice</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0105</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3,4];(改行)a1.○○(1,3);(改行)(改行)↓(改行)(改行)[2,3]
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>slice</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>join</string>
            <string>concat</string>
            <string>splice</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0106</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,&quot;n&quot;,3,4];(改行)a1.○○(0,2,3);(改行)a1(改行)(改行)↓(改行)(改行)[3,3,4]
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>splice</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>join</string>
            <string>concat</string>
            <string>slice</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0107</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [30,40];(改行)function f(value,index,array){(改行)  if(value &gt; 30) return true; else return false;(改行)}(改行)console.log(a1.every(f));
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>false</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>true</string>
            <string>error</string>
            <string>40</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0108</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [30,40];(改行)function f(value,index,array){(改行)  if(value &gt; 30) return true; else return false;(改行)}(改行)console.log(a1.some(f));
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>true</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>false</string>
            <string>error</string>
            <string>40</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0109</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [30,40,50];(改行)function f(value,index,array){(改行)  if(value &gt;= 40) return value;(改行)}(改行)console.log(a1.filter(f));
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>40,50</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>false</string>
            <string>true</string>
            <string>50</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0110</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [30,40,50];(改行)function f(value,index,array){(改行)  console.log(value - 20);(改行)}(改行)a1.forEach(f);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>10,20,30</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>30,40,50</string>
            <string>error</string>
            <string>NaN,NaN,NaN</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0111</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3,4,5,6];(改行)a1.indexOf(3,2);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>2</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>1</string>
            <string>-1</string>
            <string>error</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0112</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3,4,5,6];(改行)a1.lastIndexOf(2,6);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>1</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>5</string>
            <string>-1</string>
            <string>error</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0113</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3,3,2,1];(改行)a1.indexOf(1);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>0</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>1</string>
            <string>5</string>
            <string>6</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0114</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [];(改行)a1[0] = 0;(改行)a1.push(1,2,3);(改行)console.log(a1.length);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>4</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>1</string>
            <string>3</string>
            <string>error</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0115</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            Array.isArray([])(改行)Array.isArray({})(改行)Array.isArray([{p:1}])
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>true,false,true</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>false,false,true</string>
            <string>false,false,false</string>
            <string>true,true,true</string>
            <string>true,false,false</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0116</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2];(改行)let b1 = a1.pop();(改行)a1.push(3);(改行)let b2 = a1.pop();(改行)console.log(b1);(改行)console.log(b2);
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>2,3</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>3,3</string>
            <string>2,2</string>
            <string>3,2</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0117</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3];(改行)let f = function(value, index, array){(改行)return value * 2;(改行)}(改行)console.log(a1.map(f))
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>[1,4,9]</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>[2,4,6]</string>
            <string>Array</string>
            <string>error</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0118</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3];(改行)let f = function(prev, value, index, array){(改行)return prev + value + 1;(改行)}(改行)console.log(a1.reduce(f))
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>8</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>7</string>
            <string>6</string>
            <string>9</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0119</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [1,2,3];(改行)let f = function(prev, value, index, array){(改行)return prev - value;(改行)}(改行)console.log(a1.reduceRight(f))
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>0</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>-4</string>
            <string>-6</string>
            <string>-2</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
    <QuestionPack>
      <Alias>JS_Basic_0120</Alias>
      <QuestionBases>
        <QuestionBase xsi:type="MultipleChoice">
          <Question>
            let a1 = [6,2,3];(改行)console.log(a1.reverse())
          </Question>
          <QuestionAlignment>MiddleCenter</QuestionAlignment>
          <CorrectChoicePool>
            <string>[3,2,6]</string>
          </CorrectChoicePool>
          <WrongChoicePool>
            <string>[2,3,6]</string>
          </WrongChoicePool>
          <PlayerChooseQuantity>1</PlayerChooseQuantity>
          <WrongChoiceCount>3</WrongChoiceCount>
          <Choices/>
        </QuestionBase>
      </QuestionBases>
    </QuestionPack>
  </QuestionPacks>
</QuestionSet>